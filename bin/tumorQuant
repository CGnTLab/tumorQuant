#!/bin/bash
#Author: Kavita Kundal
# Define the base directory where the scripts are located
BASE_DIR="$(dirname "$(readlink -f "$0")")"
# Function to display usage information
#"This script is designed to facilitate the extraction of brain tumor volumes from different regions of brain from MRI images."
#"It automates the process of identifying tumor regions based on specified parameters and "
#"calculates the volume of these regions to aid in clinical assessments and research."
#""
#"## Requirements:"
#"1. MRI images in NIfTI format (nii.gz)"
#"2. Tumor segmented images in NIfTI format (nii.gz)"
#"3. FSL tools installed on your system."

usage() {
    echo -e ""
    echo -e ""
    echo -e "\033[1;34m  		#######################################\033[0m"
    echo -e "\033[1;34m  		##  				     ##\033[0m"

    # Blink the header text 5 times
    text="##  BRAIN TUMOR VOLUME EXTRACTION    ##"
    blink_count=1  # Number of blinks
    delay=0.7      

    for ((i=0; i<blink_count; i++)); do
        echo -e "\033[1;34m		$text\033[0m"  # Print blinking text
        #sleep $delay  # Pause for the delay
    done
    echo -e "\033[1;34m  		##				     ##\033[0m"
    echo -e "\033[1;34m  		#######################################\033[0m"
    echo -e ""
    #echo -e "\033[3m\"Developer: Kavita Kundal\033[0m"
    echo -e "\033[3m\"This package (developed by Kavita Kundal, CG&T Lab - IIT Hyderabad) facilitates the calculation of tumor volumes across four brain atlases: MNI, Juelich, Talairach, and Harvard-Subcortical. The initial step involves normalizing and transforming both the segmented tumor image and the T1-weighted image to align with a reference brain T1 image. Following this, the package accurately quantifies tumor volumes within the specified regions.\033[0m"

    echo -e ""
    echo -e "\033[1;31mUsage: tumorQuant -n <sample> -s <segmented_tumor.nii.gz> -t1 <t1_image.nii.gz> -a <atlas_type> -o <output_directory>\033[0m"
    echo -e ""
    echo "Options:"
    echo -e "  		\033[1;36m-n, --sample\033[0m     	  Sample name"
    echo -e "  		\033[1;36m-s, --segmented-tumor\033[0m     Path to segmented tumor file"
    echo -e " 	       \033[1;36m-t1, --t1-image\033[0m            Path to T1 image file"
    echo -e "  		\033[1;36m-a, --atlas-type\033[0m          Atlas type ('mni', 'talairach', 'juelich', 'harvard' or 'all')"
    echo -e "  		\033[1;36m-o, --output-directory\033[0m    Output directory for results"
    echo -e "  		\033[1;36m-h, --help\033[0m                Information about the tool"
    echo -e ""
    echo -e ""
    exit 1
}

# Initialize variables
sample=""
segmented_tumor=""
t1_image=""
atlas_type=""
output_dir=""

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
    	-n|--sample)
            sample="$2"
            shift
            shift
            ;;
        -s|--segmented-tumor)
            segmented_tumor="$2"
            shift
            shift
            ;;
       -t1|--t1-image)
            t1_image="$2"
            shift
            shift
            ;;
        -a|--atlas-type)
            atlas_type="$2"
            shift
            shift
            ;;
        -o|--output-directory)
            output_dir="$2"
            shift
            shift
            ;;
         -h|--help)
            usage
            ;;
        *)
            echo "Unknown option: $key"
            exit 1
            ;;
    esac
done

# Check if required arguments are provided
if [ -z "$sample" ] || [ -z "$segmented_tumor" ] || [ -z "$t1_image" ] || [ -z "$atlas_type" ] || [ -z "$output_dir" ]; then
    echo "Usage: tumorQuant -n <sample> -s <segmented_tumor.nii.gz> -t1 <t1_image.nii.gz> -a <atlas_type> -o <output_directory>"
    exit 1
fi
# Set default output directory if not provided
output_dir=${output_dir:-normalized_images}

# Create the output directory if it doesn't exist
mkdir -p "$output_dir"
if [ ! -d "$output_dir/$sample" ]; then
    mkdir "$output_dir/$sample"
fi
# Normalize the T1 image to MNI152 space
echo -e ""
echo -e ""
echo -e "\033[1;33m  		#######################################\033[0m"
echo -e "\033[1;33m  		##  				     ##\033[0m"

    # Blink the header text 5 times
text="##  BRAIN TUMOR VOLUME EXTRACTION    ##"
blink_count=1  # Number of blinks
delay=0.7      

for ((i=0; i<blink_count; i++)); do
   echo -e "\033[1;33m		$text\033[0m"  # Print blinking text
   #sleep $delay 
done
echo -e "\033[1;33m  		##				     ##\033[0m"
echo -e "\033[1;33m  		#######################################\033[0m"
echo -e ""
echo -e "\033[3;36m\"TThis package (developed by Kavita Kundal, CG&T Lab - IIT Hyderabad) facilitates the calculation of tumor volumes across four brain atlases: MNI, Juelich, Talairach, and Harvard-Subcortical. The initial step involves normalizing and transforming both the segmented tumor image and the T1-weighted image to align with a reference brain T1 image. Following this, the package accurately quantifies tumor volumes within the specified regions.\"\033[0m"
echo -e "\033[3;34m\"For more information go to : https://github.com/CGnTLab/tumorQuant.git.\"\033[0m"

echo -e ""
echo ""

COMPLETED_COLOR="\e[3;32m"  
RESET_COLOR="\e[0m"         
spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep "$pid")" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}
start_time=$(date +%s)


fsl_bin_path=$(which fsl)                      
fsl_base_dir=$(echo "$fsl_bin_path" | sed 's|\(/fsl\).*|\1|')

# Construct the full path to the MNI152_T1_1mm_brain.nii.gz file
mni_template="${fsl_base_dir}/data/standard/MNI152_T1_1mm_brain.nii.gz"
echo "$mni_template"
# Step 1: Normalizing T1 image
echo -n "STEP 1: Normalizing T1 image... "
flirt -in "$t1_image" -ref "$mni_template" \
      -out "${output_dir}/${sample}/${sample}_norm.nii.gz" \
      -omat "${output_dir}/${sample}/${sample}_transformation.mat" \
      -dof 7 -cost mutualinfo &
normalize_pid=$!
spinner $normalize_pid
wait $normalize_pid
echo -e "${COMPLETED_COLOR}T1 image normalization completed.${RESET_COLOR}"
echo ""

# STEP 2: Transforming segmented tumor image
echo -n "STEP 2: Transforming segmented tumor image... "
flirt -in "$segmented_tumor" -ref "$mni_template" \
      -out "${output_dir}/${sample}/${sample}_ROI.nii.gz" \
      -applyxfm -init "${output_dir}/${sample}/${sample}_transformation.mat" &
transform_pid=$!
spinner $transform_pid
wait $transform_pid
echo -e "${COMPLETED_COLOR}Segmented tumor image transformation completed.${RESET_COLOR}"
echo ""

# STEP 3: Volume extraction based on selected atlas
path="${BASE_DIR}/../data/scripts"
case "$atlas_type" in
    "mni")
        echo -n "STEP 3: Volume extraction based on MNI atlases... "
        mkdir -p $output_dir/$sample/MNI
        "$path/mni.sh" "$sample" "${output_dir}/${sample}/${sample}_ROI.nii.gz" "$output_dir/$sample/" &
        mni_pid=$!
        spinner $mni_pid
        wait $mni_pid
        echo -e "${COMPLETED_COLOR}MNI atlas volume extraction completed.${RESET_COLOR}"
        ;;
    
    "talairach")
        echo -n "STEP 3: Volume extraction based on Talairach atlases... "
        mkdir -p $output_dir/$sample/Talairach
        "$path/talairach.sh" "$sample" "${output_dir}/${sample}/${sample}_ROI.nii.gz" "$output_dir/$sample/" &
        talairach_pid=$!
        spinner $talairach_pid
        wait $talairach_pid
        echo -e "${COMPLETED_COLOR}Talairach atlas volume extraction completed.${RESET_COLOR}"
        ;;
    
    "juelich")
        echo -n "STEP 3: Volume extraction based on Juelich atlases... "
        mkdir -p $output_dir/$sample/Juelich
        "$path/juelich.sh" "$sample" "${output_dir}/${sample}/${sample}_ROI.nii.gz" "$output_dir/$sample/" &
        juelich_pid=$!
        spinner $juelich_pid
        wait $juelich_pid
        echo -e "${COMPLETED_COLOR}Juelich atlas volume extraction completed.${RESET_COLOR}"
        ;;
    
    "harvard")
        echo -n "STEP 3: Volume extraction based on Harvard Sub-Cortical atlases... "
        mkdir -p $output_dir/$sample/Harvard
        "$path/harvard.sh" "$sample" "${output_dir}/${sample}/${sample}_ROI.nii.gz" "$output_dir/$sample/" &
        harvard_pid=$!
        spinner $harvard_pid
        wait $harvard_pid
        echo -e "${COMPLETED_COLOR}Harvard atlas volume extraction completed.${RESET_COLOR}"
        ;;
    
    "all")
        echo -n "STEP 3: Volume extraction based on all atlases (MNI, Juelich, Talairach, Harvard) "
        "$path/all.sh" "$sample" "${output_dir}/${sample}/${sample}_ROI.nii.gz" "$output_dir/$sample/"
        #echo -e "${COMPLETED_COLOR}All atlas volume extraction completed.${RESET_COLOR}"
        ;;
   *)
        echo -e "\033[3;31mInvalid atlas type. Please specify 'mni', 'talairach', 'juelich', 'harvard', or 'all'.\033[0m"
        exit 1
        ;;
esac

# All processes completed successfully
#echo""
echo -e "\033[3;36mAll steps completed successfully!${RESET_COLOR}"

quotes=(
    "\033[3;35m“Success is the sum of small efforts, repeated day in and day out.” – Robert Collier\033[0m"
    "\033[3;35m“The only limit to our realization of tomorrow is our doubts of today.” – Franklin D. Roosevelt\033[0m"
    "\033[3;35m“Don't watch the clock; do what it does. Keep going.” – Sam Levenson\033[0m"
    "\033[3;35m“Hardships often prepare ordinary people for an extraordinary destiny.” – C.S. Lewis\033[0m"
    "\033[3;35m“Believe you can and you're halfway there.” – Theodore Roosevelt\033[0m"
)

# Get a random quote
random_quote=${quotes[$RANDOM % ${#quotes[@]}]}

# Display a nice quote after completion in italicized magenta
echo -e "\033[3;35m\n$random_quote\n\033[0m"
end_time=$(date +%s)

# Calculate the elapsed time
elapsed_time=$((end_time - start_time))

# Convert elapsed time to minutes and seconds
minutes=$((elapsed_time / 60))
seconds=$((elapsed_time % 60))

# Display the total time taken
echo -e "\n\033[1;37mProcess completed in: ${minutes}min ${seconds}sec.\033[0m\n"
